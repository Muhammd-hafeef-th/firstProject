<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>

    <title></title>
    <style>
        .error-message {
            color: red;
            font-size: 0.75rem;
            display: none;
        }
    </style>
</head>

<body class="bg-gray-900 text-white">

    <!-- Navbar -->
    <%- include('../../views/partials/admin/navbar') %>

        <div class="flex">
            <!-- Sidebar -->
            <%- include('../../views/partials/admin/sidebar') %>

                <!-- Main Content -->
                <div class="bg-gray-900 text-white p-6">
                    <h1 class="text-2xl font-bold mb-6">Add Products</h1>

                    <div class="bg-gray-800 p-6 rounded-lg shadow-lg max-w-5xl mx-auto">
                        <form id="addProductForm" enctype="multipart/form-data"
                            class="grid grid-cols-1 md:grid-cols-2 gap-6">


                            <div class="md:col-span-1">
                                <label class="block mb-2">Add Images:</label>
                                <div class="flex gap-4">
                                    <div
                                        class="relative w-24 h-24 border-2 border-gray-500 rounded-lg bg-gray-700 flex items-center justify-center">
                                        <input type="file" name="images" id="imageUpload1" class="hidden"
                                            accept="image/*">
                                        <label for="imageUpload1"
                                            class="cursor-pointer text-gray-400 text-sm absolute inset-0 flex items-center justify-center">Upload</label>
                                        <img id="preview1" class="w-full h-full object-cover rounded-lg hidden">
                                    </div>
                                    <div
                                        class="relative w-24 h-24 border-2 border-gray-500 rounded-lg bg-gray-700 flex items-center justify-center">
                                        <input type="file" name="images" id="imageUpload2" class="hidden"
                                            accept="image/*">
                                        <label for="imageUpload2"
                                            class="cursor-pointer text-gray-400 text-sm absolute inset-0 flex items-center justify-center">Upload</label>
                                        <img id="preview2" class="w-full h-full object-cover rounded-lg hidden">
                                    </div>
                                    <div
                                        class="relative w-24 h-24 border-2 border-gray-500 rounded-lg bg-gray-700 flex items-center justify-center">
                                        <input type="file" name="images" id="imageUpload3" class="hidden"
                                            accept="image/*">
                                        <label for="imageUpload3"
                                            class="cursor-pointer text-gray-400 text-sm absolute inset-0 flex items-center justify-center">Upload</label>
                                        <img id="preview3" class="w-full h-full object-cover rounded-lg hidden">
                                    </div>
                                </div>
                                <div id="image-error" class="error-message"></div>
                            </div>
                            <div id="cropModal"
                                class="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center hidden">
                                <div class="bg-white p-4 rounded-lg w-[450px] max-w-full shadow-lg">
                                    <h2 class="text-black text-xl mb-4">Crop Image</h2>
                                    <div>
                                        <img id="cropImage" style="max-width: 65%;">
                                    </div>
                                    <div class="mt-4 flex justify-end">
                                        <button id="cropButton"
                                            class="bg-green-500 text-white px-4 py-2 rounded">Crop</button>
                                        <button id="cancelCrop"
                                            class="ml-2 bg-red-500 text-white px-4 py-2 rounded">Cancel</button>
                                    </div>
                                </div>
                            </div>


                            <div class="md:col-span-1 grid grid-cols-1 gap-4">
                                <div>
                                    <label class="block mb-1">Product Name:</label>
                                    <input type="text" name="name" id="name"
                                        class="w-full p-2 rounded bg-gray-700 border border-gray-600">
                                    <div id="name-error" class="error-message"></div>
                                </div>
                                <div>
                                    <label class="block mb-1">Product Description:</label>
                                    <input type="text" name="description" id="description"
                                        class="w-full p-2 rounded bg-gray-700 border border-gray-600">
                                    <div id="description-error" class="error-message"></div>
                                </div>
                                <div>
                                    <label class="block mb-1">Brand:</label>
                                    <select name="brand" id="brand"
                                        class="w-full p-2 rounded bg-gray-700 border border-gray-600 text-white">
                                        <option value="">Select a brand</option>
                                        <% brands.forEach(watch=> { %>
                                            <option value="<%= watch._id %>">
                                                <%= watch.brandName %>
                                            </option>
                                            <% }) %>
                                    </select>
                                    <div id="brand-error" class="error-message"></div>
                                </div>

                                <div>
                                    <label class="block mb-1">Category:</label>
                                    <select name="category" id="category"
                                        class="w-full p-2 rounded bg-gray-700 border border-gray-600 text-white">
                                        <option value="">Select category</option>
                                        <option value="gents">Gents</option>
                                        <option value="ladies">Ladies</option>
                                        <option value="couples">Couples</option>
                                    </select>
                                    <div id="category-error" class="error-message"></div>
                                </div>
                            </div>

                            <div>
                                <label class="block mb-1">Regular Amount:</label>
                                <input type="number" name="amount" id="amount"
                                    class="w-full p-2 rounded bg-gray-700 border border-gray-600">
                                <div id="amount-error" class="error-message"></div>
                            </div>
                            <div>
                                <label class="block mb-1">Offer (%):</label>
                                <div class="relative">
                                    <input type="number" name="discount" id="discount"
                                        class="w-full p-2 rounded bg-gray-700 border border-gray-600 pr-8" min="0"
                                        max="100" step="0.01" placeholder="0-100">
                                    <span class="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400">%</span>
                                </div>
                                <div id="discount-error" class="error-message"></div>
                            </div>
                            <div>
                                <label class="block mb-1">Sales Amount:</label>
                                <input type="number" name="salesAmount" id="salesAmount"
                                    class="w-full p-2 rounded bg-gray-700 border border-gray-600">
                                <div id="salesAmount-error" class="error-message"></div>
                            </div>
                            <div>
                                <label class="block mb-1">Shiping Charge:</label>
                                <input type="number" name="shiping" id="shiping"
                                    class="w-full p-2 rounded bg-gray-700 border border-gray-600">
                                <div id="shiping-error" class="error-message"></div>
                            </div>
                            <div>
                                <label class="block mb-1">Stock Count:</label>
                                <input type="number" name="stock" id="stock"
                                    class="w-full p-2 rounded bg-gray-700 border border-gray-600">
                                <div id="stock-error" class="error-message"></div>
                            </div>


                            <div class="flex flex-col">
                                <label class="block mb-1">Featured:</label>
                                <div class="flex gap-4">
                                    <label><input type="radio" name="featured" value="yes" class="mr-1"> Yes</label>
                                    <label><input type="radio" name="featured" value="no" class="mr-1"> No</label>
                                </div>
                                <div id="featured-error" class="error-message"></div>
                            </div>


                            <div class="flex flex-col">
                                <label class="block mb-1">New Product:</label>
                                <div class="flex gap-4">
                                    <label><input type="radio" name="new" value="yes" class="mr-1"> Yes</label>
                                    <label><input type="radio" name="new" value="no" class="mr-1"> No</label>
                                </div>
                                <div id="new-error" class="error-message"></div>
                            </div>


                            <div class="md:col-span-2">
                                <label class="block mb-1">Colour:</label>
                                <div class="grid grid-cols-3 gap-2">
                                    <input type="text" name="color" id="color"
                                        class="p-2 rounded bg-gray-700 border border-gray-600">
                                </div>
                                <div id="color-error" class="error-message"></div>
                            </div>


                            <div class="md:col-span-2 flex justify-center">
                                <button type="submit" id="submitButton"
                                    class="bg-green-500 text-black px-6 py-2 rounded-lg hover:bg-green-600 mt-5">
                                    ADD PRODUCT
                                </button>

                            </div>

                        </form>
                    </div>

                </div>
        </div>
        <script>
            function setupDiscountHandling() {
                const amountInput = document.getElementById('amount');
                const discountInput = document.getElementById('discount');
                const salesAmountInput = document.getElementById('salesAmount');

                function calculateSalePrice() {
                    const amount = parseFloat(amountInput.value);
                    const discount = parseFloat(discountInput.value);

                    if (!isNaN(amount) && !isNaN(discount)) {
                        const salePrice = amount * (1 - (discount / 100));
                        salesAmountInput.value = salePrice.toFixed(2);
                    }
                }

                amountInput.addEventListener('input', calculateSalePrice);
                discountInput.addEventListener('input', calculateSalePrice);
            }

            document.addEventListener("DOMContentLoaded", function () {
                let isSubmitting = false;
                setupDiscountHandling();
                const submitButton = document.getElementById("submitButton");
                const form = document.getElementById("addProductForm");

                let cropper;
                let selectedFileIndex = 0;
                const imageInputs = [
                    document.getElementById("imageUpload1"),
                    document.getElementById("imageUpload2"),
                    document.getElementById("imageUpload3")
                ];
                const previewImages = [
                    document.getElementById("preview1"),
                    document.getElementById("preview2"),
                    document.getElementById("preview3")
                ];

                imageInputs.forEach((input, index) => {
                    input.addEventListener("change", function (event) {
                        const file = event.target.files[0];
                        if (!file) return;

                        if (!['image/jpeg', 'image/png', 'image/webp'].includes(file.type)) {
                            displayErrorMessage("image-error", "Only JPG, PNG, or WEBP files are allowed");
                            event.target.value = '';
                            return;
                        }

                        selectedFileIndex = index;
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            document.getElementById("cropImage").src = e.target.result;
                            document.getElementById("cropModal").classList.remove("hidden");

                            if (cropper) {
                                cropper.destroy();
                            }

                            cropper = new Cropper(document.getElementById("cropImage"), {
                                aspectRatio: 0, 
                                viewMode: 1,
                                autoCropArea: 0.8
                            });
                        };
                        reader.readAsDataURL(file);
                    });
                });

                document.getElementById("cropButton").addEventListener("click", function () {
                    if (cropper) {
                        const canvas = cropper.getCroppedCanvas({
                            width: 800,
                            height: 800,
                            minWidth: 256,
                            minHeight: 256,
                            maxWidth: 4096,
                            maxHeight: 4096,
                            imageSmoothingEnabled: true,
                            imageSmoothingQuality: 'high',
                        });

                        if (canvas) {
                            canvas.toBlob((blob) => {
                                const file = new File([blob], `cropped_${Date.now()}.png`, { type: 'image/png' });
                                const dataTransfer = new DataTransfer();
                                dataTransfer.items.add(file);
                                imageInputs[selectedFileIndex].files = dataTransfer.files;

                                previewImages[selectedFileIndex].src = URL.createObjectURL(blob);
                                previewImages[selectedFileIndex].classList.remove("hidden");
                            }, 'image/png', 0.9);

                            document.getElementById("cropModal").classList.add("hidden");
                        }
                    }
                });

                document.getElementById("cancelCrop").addEventListener("click", function () {
                    document.getElementById("cropModal").classList.add("hidden");
                    imageInputs[selectedFileIndex].value = '';
                });

                form.addEventListener("submit", async function (event) {
                    event.preventDefault();

                    if (isSubmitting) return;
                    isSubmitting = true;
                    submitButton.disabled = true;
                    submitButton.innerHTML = 'Processing...';

                    if (!validationForm()) {
                        isSubmitting = false;
                        submitButton.disabled = false;
                        submitButton.innerHTML = 'ADD PRODUCT';
                        return;
                    }

                    try {
                        const formData = new FormData();

                        formData.append("name", document.getElementById("name").value);
                        formData.append("description", document.getElementById("description").value);
                        formData.append("brand", document.getElementById("brand").value);
                        formData.append("category", document.getElementById("category").value);
                        formData.append("amount", document.getElementById("amount").value);
                        formData.append("discount", document.getElementById("discount").value);
                        formData.append("shiping", document.getElementById("shiping").value);
                        formData.append("salesAmount", document.getElementById("salesAmount").value);
                        formData.append("stock", document.getElementById("stock").value);
                        formData.append('color',document.getElementById('color').value);

                        for (let i = 0; i < imageInputs.length; i++) {
                            if (imageInputs[i].files[0]) {
                                formData.append("images", imageInputs[i].files[0]);
                            }
                        }


                        const featuredValue = document.querySelector('input[name="featured"]:checked').value;
                        const newValue = document.querySelector('input[name="new"]:checked').value;

                        formData.append("featured", featuredValue);
                        formData.append("new", newValue);

                        const response = await fetch("/admin/add-productItem", {
                            method: "POST",
                            body: formData,
                        });

                        if (!response.ok) {
                            const errorData = await response.json();
                            throw new Error(errorData.error || "Failed to add product");
                        }

                        const data = await response.json();
                        Swal.fire({
                            icon: "success",
                            title: "Success",
                            text: data.message,
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.href = "/admin/products";
                        });

                    } catch (error) {
                        console.error("Error:", error);
                        Swal.fire({
                            icon: "error",
                            title: "Error",
                            text: error.message
                        });
                    } finally {
                        isSubmitting = false;
                        submitButton.disabled = false;
                        submitButton.innerHTML = 'ADD PRODUCT';
                    }
                });

                function validationForm() {
                    clearErrorMessage();
                    const name = document.getElementById('name').value.trim();
                    const description = document.getElementById('description').value.trim();
                    const brand = document.getElementById("brand").value.trim();
                    const category = document.getElementById('category').value.trim();
                    const amount = document.getElementById("amount").value.trim();
                    const salesAmount = document.getElementById("salesAmount").value.trim();
                    const stock = document.getElementById("stock").value.trim();
                    const categoryMatch = /^(gents|ladies|couples)$/i;
                    const featuredSelected = document.querySelector('input[name="featured"]:checked');
                    const newSelected = document.querySelector('input[name="new"]:checked');
                    const discount = document.getElementById("discount").value.trim();
                    const color=document.getElementById('color').value.trim();


                    const image1 = document.getElementById('imageUpload1').files[0];
                    const image2 = document.getElementById('imageUpload2').files[0];
                    const image3 = document.getElementById('imageUpload3').files[0];

                    let isValid = true;

                    if (name === "") {
                        displayErrorMessage("name-error", "Please enter a name");
                        isValid = false;
                    } else if (!/^[A-Z][a-zA-Z0-9\s]*$/.test(name)) {
                        displayErrorMessage("name-error", "Product name should start with a capital letter and contain only alphabets");
                        isValid = false;
                    }
                    if (discount === "" || isNaN(discount) || discount < 0 || discount > 100) {
                        displayErrorMessage("discount-error", "Discount must be between 0% and 100%");
                        isValid = false;
                    }

                    if (!categoryMatch.test(category)) {
                        displayErrorMessage("category-error", "Category must be either 'gents', 'ladies', or 'couples'");
                        isValid = false;
                    }
                    if(color===''){
                        displayErrorMessage('color-error',"Please enter a colour");
                        isValid=false;
                    }

                    if (description === "") {
                        displayErrorMessage("description-error", "Please enter a description");
                        isValid = false;
                    } else if (description.length < 10) {
                        displayErrorMessage("description-error", "Description should be at least 10 characters long");
                        isValid = false;
                    }
                    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
                    function isImageValid(file) {
                        return file && allowedTypes.includes(file.type);
                    }

                    if (!(image1 && image2 && image3)) {
                        displayErrorMessage("image-error", "Please upload exactly three images.");
                        isValid = false;
                    } else if (![image1, image2, image3].every(isImageValid)) {
                        displayErrorMessage("image-error", "Only jpg, jpeg, png, and webp files are allowed.");
                        isValid = false;
                    }
                    if (salesAmount && (parseFloat(salesAmount) >= parseFloat(amount))) {
                        displayErrorMessage("salesAmount-error", "Sale price must be less than regular price");
                        isValid = false;
                    }

                    if (amount === "" || isNaN(amount) || amount <= 0) {
                        displayErrorMessage("amount-error", "Enter a valid amount greater than 0");
                        isValid = false;
                    }

                    if (stock === "" || !Number.isInteger(Number(stock)) || stock < 0) {
                        displayErrorMessage("stock-error", "Enter a valid stock quantity (0 or more)");
                        isValid = false;
                    }
                    if (!brand) {
                        displayErrorMessage("brand-error", "Please select a brand");
                        isValid = false;
                    }
                    if (!featuredSelected) {
                        displayErrorMessage("featured-error", "Please select featured status");
                        isValid = false;
                    }

                    if (!newSelected) {
                        displayErrorMessage("new-error", "Please select new product status");
                        isValid = false;
                    }


                    return isValid;
                }


                function displayErrorMessage(elementId, message) {
                    const errorElement = document.getElementById(elementId);
                    errorElement.innerText = message;
                    errorElement.style.display = 'block';
                }

                function clearErrorMessage() {
                    const errorElements = document.getElementsByClassName('error-message');
                    Array.from(errorElements).forEach((element) => {
                        element.innerText = "";
                        element.style.display = "none";
                    });
                }
            });
        </script>

</body>

</html>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report - LB</title>

    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://unpkg.com/@phosphor-icons/web"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#6d28d9',
                        dark: '#111827',
                        darker: '#0d1321',
                        light: '#f3f4f6',
                    }
                }
            }
        }
    </script>

    <style>
        * {
            box-sizing: border-box; 
        }
        .error-message {
            color: #f87171;
            font-size: 0.75rem;
            margin-top: 0.25rem;
            display: none;
        }
        .chart-container {
            position: relative;
            height: 40vh;
            min-height: 300px;
            max-height: 400px;
            width: 100%;
        }
        .glass-card {
            background: rgba(17, 24, 39, 0.85);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        td, th {
            white-space: nowrap; 
        }
        .truncate {
            overflow: hidden;
            text-overflow: ellipsis;
        }
        @media (max-width: 767px) {
            #dateRange {
                display: flex;
                flex-direction: column;
                gap: 0.5rem;
                width: 100%;
            }
            #dateRange span {
                display: none;
            }
            .chart-container {
                height: 30vh;
                min-height: 250px;
            }
            /* Mobile list styles for Delivered Orders */
            .mobile-list-item {
                background-color: rgba(31, 41, 55, 0.5);
                border-bottom: 1px solid rgba(75, 85, 99, 0.5);
                padding: 0.75rem 1rem;
                transition: background-color 0.2s;
            }
            .mobile-list-item:last-child {
                border-bottom: none;
            }
            .mobile-list-item:active {
                background-color: rgba(31, 41, 55, 0.8);
            }
            .mobile-list-main {
                display: flex;
                align-items: center;
                gap: 0.75rem;
            }
            .mobile-list-avatar {
                flex-shrink: 0;
                width: 2.5rem;
                height: 2.5rem;
                border-radius: 0.5rem;
                overflow: hidden;
                border: 1px solid rgba(75, 85, 99, 0.5);
                display: flex;
                align-items: center;
                justify-content: center;
                background-color: #374151; /* bg-gray-700 */
            }
            .mobile-list-info {
                flex: 1;
                min-width: 0;
            }
            .mobile-list-name {
                font-size: 0.875rem;
                font-weight: 500;
                color: #ffffff;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
            }
            .mobile-list-meta {
                display: flex;
                align-items: center;
                gap: 0.5rem;
                margin-top: 0.25rem;
            }
            .mobile-list-amount {
                font-size: 0.75rem;
                font-weight: 500;
                color: #34d399; /* text-green-400 */
            }
            .mobile-list-status {
                font-size: 0.6875rem; /* 11px */
                padding: 0.25rem 0.5rem;
                border-radius: 9999px;
                background-color: rgba(16, 185, 129, 0.5); /* bg-green-900/50 */
                color: #86efac; /* text-green-300 */
                border: 1px solid rgba(22, 163, 74, 0.5); /* border-green-800 */
            }
            /* Expandable details */
            .mobile-details-toggle {
                display: none;
            }
            .mobile-details-content {
                display: none;
                padding: 0.75rem 0;
                border-top: 1px solid rgba(75, 85, 99, 0.3);
                margin-top: 0.5rem;
            }
            .mobile-details-toggle:checked ~ .mobile-details-content {
                display: block;
            }
            .mobile-details-label {
                display: flex;
                justify-content: space-between;
                align-items: center;
                cursor: pointer;
                padding: 0.25rem 0;
                margin-top: 0.5rem;
                border-top: 1px solid rgba(75, 85, 99, 0.3);
            }
            .mobile-details-label i {
                transition: transform 0.2s;
            }
            .mobile-details-toggle:checked ~ .mobile-details-label i {
                transform: rotate(180deg);
            }
            .mobile-details-grid {
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: 0.5rem 0.75rem;
                margin-top: 0.5rem;
            }
            .mobile-details-item label {
                font-size: 0.6875rem; /* 11px */
                color: rgba(156, 163, 175, 1);
                text-transform: uppercase;
                letter-spacing: 0.025em;
            }
            .mobile-details-item span {
                font-size: 0.75rem;
                font-weight: 500;
                display: block;
                margin-top: 0.125rem;
            }
            /* Adjusted grid layouts */
            .sales-overview-cards {
                grid-template-columns: 1fr !important; /* Stack cards vertically */
            }
            .sales-overview-charts {
                grid-template-columns: 1fr !important; /* Stack charts vertically */
            }
            .top-products-grid,
            .top-brands-grid,
            .top-coupons-grid {
                grid-template-columns: 1fr !important; /* Single column for cards */
            }
            /* Button styles */
            .action-btn {
                relative: overflow-hidden;
                font-medium;
                transition: all 0.3s;
                background-color: rgba(31, 41, 55, 0.7);
                border-radius: 0.5rem;
                min-width: 2.75rem; /* Ensure touch target â‰¥44px */
                min-height: 2.75rem;
                display: flex;
                justify-content: center;
                align-items: center;
            }
            .action-btn:hover {
                background-color: rgba(31, 41, 55, 0.9);
            }
        }
    </style>
</head>

<body class="bg-darker text-gray-100 min-h-screen font-['Inter']">
    <!-- Navbar -->
    <%- include('../../views/partials/admin/navbar')%>

    <div class="flex h-screen pt-16">
        <!-- Sidebar -->
        <%- include('../../views/partials/admin/sidebar')%>

        <!-- Main Content -->
        <div class="flex-1 ml-0 md:ml-64 p-4 sm:p-6 max-w-7xl mx-auto w-full overflow-x-hidden">
            <div class="bg-gray-800 p-4 sm:p-6 rounded-xl shadow-lg mb-6 w-full">
                <div class="flex flex-col gap-6">
                    <div>
                        <h2 class="text-xl sm:text-2xl font-bold text-white">Sales Report</h2>
                        <p class="text-gray-400 mt-1 text-sm sm:text-base">View and analyze your sales data</p>
                    </div>

                    <div class="flex flex-col gap-4 w-full">
                        <form id="reportForm" class="flex flex-col gap-4 w-full">
                            <div class="flex flex-col md:flex-row gap-4 w-full">
                                <div class="flex-1 flex flex-col md:flex-row items-start md:items-center gap-4">
                                    <select name="period"
                                        class="bg-gray-700 text-white rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-purple-600 w-full md:w-48">
                                        <option value="today" <%=period==='today' ? 'selected' : '' %>>Today</option>
                                        <option value="week" <%=period==='week' ? 'selected' : '' %>>This Week</option>
                                        <option value="month" <%=period==='month' ? 'selected' : '' %>>This Month</option>
                                        <option value="custom" <%=period==='custom' ? 'selected' : '' %>>Custom Range</option>
                                    </select>

                                    <div id="dateRange"
                                        class="<%= period !== 'custom' ? 'hidden' : '' %> flex-1 grid grid-cols-1 md:grid-cols-3 gap-2 items-center">
                                        <input type="date" name="startDate" value="<%= startDate %>"
                                            class="bg-gray-700 text-white rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-purple-600 w-full">
                                        <span class="text-white text-center hidden md:block">to</span>
                                        <input type="date" name="endDate" value="<%= endDate %>"
                                            class="bg-gray-700 text-white rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-purple-600 w-full">
                                    </div>
                                </div>

                                <button type="submit"
                                    class="relative overflow-hidden px-6 py-2 rounded-lg font-medium transition-all duration-300 bg-purple-600 hover:bg-purple-700 text-white w-full md:w-auto">
                                    Apply
                                </button>
                            </div>

                            <div id="dateError" class="text-red-500 text-sm hidden">Start date must be before end date</div>
                        </form>

                        <div class="flex gap-2 w-full">
                            <button onclick="downloadReport('excel')"
                                class="relative overflow-hidden px-4 py-2 rounded-lg font-medium transition-all duration-300 bg-green-600 hover:bg-green-700 text-white flex items-center gap-2 justify-center w-full sm:w-auto">
                                <i class="ph ph-file-excel"></i>
                                Excel
                            </button>
                            <button onclick="downloadReport('pdf')"
                                class="relative overflow-hidden px-4 py-2 rounded-lg font-medium transition-all duration-300 bg-red-600 hover:bg-red-700 text-white flex items-center gap-2 justify-center w-full sm:w-auto">
                                <i class="ph ph-file-pdf"></i>
                                PDF
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sales Overview Cards -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 sm:gap-6 mb-6 w-full sales-overview-cards">
                <div class="glass-card p-4 sm:p-6 rounded-xl shadow-lg">
                    <div class="flex items-center gap-4">
                        <div class="p-3 bg-green-600/20 rounded-lg">
                            <i class="ph ph-check-circle text-xl sm:text-2xl text-green-400"></i>
                        </div>
                        <div>
                            <h3 class="text-base sm:text-lg font-semibold text-white">Delivered Orders</h3>
                            <p class="text-xl sm:text-2xl font-bold text-green-400"><%= totalOrders %></p>
                        </div>
                    </div>
                </div>

                <div class="glass-card p-4 sm:p-6 rounded-xl shadow-lg">
                    <div class="flex items-center gap-4">
                        <div class="p-3 bg-purple-600/20 rounded-lg">
                            <i class="ph ph-currency-inr text-xl sm:text-2xl text-purple-400"></i>
                        </div>
                        <div>
                            <h3 class="text-base sm:text-lg font-semibold text-white">Total Sales</h3>
                            <p class="text-xl sm:text-2xl font-bold text-purple-400">â‚¹<%= totalSales.toLocaleString() %></p>
                        </div>
                    </div>
                </div>

                <div class="glass-card p-4 sm:p-6 rounded-xl shadow-lg">
                    <div class="flex items-center gap-4">
                        <div class="p-3 bg-red-600/20 rounded-lg">
                            <i class="ph ph-tag text-xl sm:text-2xl text-red-400"></i>
                        </div>
                        <div>
                            <h3 class="text-base sm:text-lg font-semibold text-white">Total Discount</h3>
                            <p class="text-xl sm:text-2xl font-bold text-red-400">â‚¹<%= totalDiscount.toLocaleString() %></p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sales Overview Section -->
            <div class="glass-card rounded-xl p-4 sm:p-6 shadow-lg mb-6 w-full">
                <h3 class="text-lg sm:text-xl font-semibold text-white mb-4">Sales Overview</h3>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4 sm:gap-6 sales-overview-charts">
                    <div class="chart-container">
                        <canvas id="salesTrendChart"></canvas>
                    </div>
                    <div class="chart-container">
                        <canvas id="paymentMethodsChart"></canvas>
                    </div>
                    <div class="chart-container">
                        <canvas id="orderStatusChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Top Selling Products -->
            <div class="glass-card p-4 sm:p-6 rounded-xl shadow-lg mb-6 w-full">
                <h3 class="text-lg sm:text-xl font-bold text-white mb-4">Top Selling Products</h3>
                <% if (topProducts.length > 0) { %>
                    <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-4 top-products-grid">
                        <% topProducts.forEach(product => { %>
                            <div class="bg-gray-700 p-4 rounded-lg flex flex-col items-center">
                                <% if (product.image) { %>
                                    <img src="<%= product.image %>" alt="<%= product.name %>"
                                        class="w-20 h-20 object-cover rounded-md mb-2">
                                <% } else { %>
                                    <div
                                        class="w-20 h-20 bg-gray-600 rounded-md mb-2 flex items-center justify-center">
                                        <i class="ph ph-image text-2xl text-gray-400"></i>
                                    </div>
                                <% } %>
                                <h4 class="text-xs sm:text-sm font-medium text-center truncate w-full"><%= product.name %></h4>
                                <p class="text-xs text-gray-400 mt-1"><%= product.totalQuantity %> sold</p>
                                <p class="text-xs text-purple-400 mt-1">â‚¹<%= product.totalRevenue.toLocaleString() %></p>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <p class="text-gray-400">No products sold in this period</p>
                <% } %>
            </div>

            <!-- Top Selling Brands -->
            <div class="glass-card p-4 sm:p-6 rounded-xl shadow-lg mb-6 w-full">
                <h3 class="text-lg sm:text-xl font-bold text-white mb-4">Top Selling Brands</h3>
                <% if (topBrands.length > 0) { %>
                    <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-4 top-brands-grid">
                        <% topBrands.forEach(brand => { %>
                            <div class="bg-gray-700 p-4 rounded-lg text-center">
                                <h4 class="text-xs sm:text-sm font-medium truncate"><%= brand._id %></h4>
                                <p class="text-xs text-gray-400 mt-1"><%= brand.totalItems %> items sold</p>
                                <p class="text-xs text-purple-400 mt-1">â‚¹<%= brand.totalSales.toLocaleString() %></p>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <p class="text-gray-400">No brands with sales in this period</p>
                <% } %>
            </div>

            <!-- Most Used Coupons -->
            <div class="glass-card p-4 sm:p-6 rounded-xl shadow-lg mb-6 w-full">
                <h3 class="text-lg sm:text-xl font-bold text-white mb-4">Most Used Coupons</h3>
                <% if (topCoupons.length > 0) { %>
                    <div class="grid grid-cols-1 sm:grid-cols-3 md:grid-cols-5 gap-4 top-coupons-grid">
                        <% topCoupons.forEach(coupon => { %>
                            <div class="bg-gray-700 p-4 rounded-lg text-center">
                                <h4 class="text-xs sm:text-sm font-medium truncate"><%= coupon._id %></h4>
                                <p class="text-xs text-gray-400 mt-1"><%= coupon.usageCount %> uses</p>
                                <p class="text-xs text-purple-400 mt-1">
                                    <%= coupon.discountType === 'percentage' ? coupon.discountValue + '%' : 'â‚¹' + coupon.discountValue.toLocaleString() %>
                                </p>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <p class="text-gray-400">No coupons used in this period</p>
                <% } %>
            </div>

            <div class="glass-card rounded-xl shadow-lg w-full">
                <div class="p-4 sm:p-6 border-b border-gray-700">
                    <h3 class="text-lg sm:text-xl font-semibold text-white">Delivered Orders</h3>
                </div>
                <!-- Desktop Table View -->
                <div class="overflow-x-auto hidden md:block">
                    <table class="table-auto w-full">
                        <thead class="bg-gray-700 sticky top-0">
                            <tr>
                                <th class="px-2 sm:px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider w-1/7">Order ID</th>
                                <th class="px-2 sm:px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider w-1/7">Date</th>
                                <th class="px-2 sm:px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider w-1/7">Customer</th>
                                <th class="px-2 sm:px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider w-1/7">Payment Method</th>
                                <th class="px-2 sm:px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider w-1/7">Total Amount</th>
                                <th class="px-2 sm:px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider w-1/7">Discount</th>
                                <th class="px-2 sm:px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider w-1/7">Final Amount</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-700">
                            <% orders.forEach(order => { %>
                                <tr class="hover:bg-gray-700/50 transition-colors">
                                    <td class="px-2 sm:px-4 py-4 text-xs sm:text-sm text-gray-300 truncate">#<%= order.orderId %></td>
                                    <td class="px-2 sm:px-4 py-4 text-xs sm:text-sm text-gray-300">
                                        <%= new Date(order.createdOn).toLocaleDateString() %>
                                    </td>
                                    <td class="px-2 sm:px-4 py-4 text-xs sm:text-sm text-gray-300 truncate">
                                        <%= order.user && order.user.firstname ? order.user.firstname : 'Unknown User' %>
                                    </td>
                                    <td class="px-2 sm:px-4 py-4 text-xs sm:text-sm text-gray-300 truncate">
                                        <%= order.paymentMethod.type.toUpperCase() %>
                                    </td>
                                    <td class="px-2 sm:px-4 py-4 text-xs sm:text-sm text-gray-300">â‚¹<%= order.totalPrice.toLocaleString() %></td>
                                    <td class="px-2 sm:px-4 py-4 text-xs sm:text-sm text-red-400">â‚¹<%= (order.totalPrice - order.finalAmount).toLocaleString() %></td>
                                    <td class="px-2 sm:px-4 py-4 text-xs sm:text-sm text-green-400">â‚¹<%= order.finalAmount.toLocaleString() %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>

                <!-- Mobile List View -->
                <div class="md:hidden">
                    <% orders.forEach(order => { %>
                        <div class="mobile-list-item">
                            <!-- Main Row -->
                            <div class="mobile-list-main">
                                <!-- Customer Avatar -->
                                <div class="mobile-list-avatar">
                                    <span class="text-gray-300 font-medium">
                                        <%= order.user && order.user.firstname ? order.user.firstname.charAt(0).toUpperCase() : 'U' %>
                                    </span>
                                </div>
                                <!-- Order Info -->
                                <div class="mobile-list-info">
                                    <div class="mobile-list-name">
                                        <%= order.user && order.user.firstname ? order.user.firstname : 'Unknown User' %>
                                    </div>
                                    <div class="mobile-list-meta">
                                        <span class="mobile-list-amount">â‚¹<%= order.finalAmount.toLocaleString() %></span>
                                        <span class="mobile-list-status">Delivered</span>
                                    </div>
                                </div>
                            </div>
                            <!-- Expandable Details -->
                            <input type="checkbox" id="details-<%= order.orderId %>" class="mobile-details-toggle hidden">
                            <label for="details-<%= order.orderId %>" class="mobile-details-label">
                                <span class="text-gray-400 text-xs">More Details</span>
                                <i class="fas fa-chevron-down text-gray-400"></i>
                            </label>
                            <div class="mobile-details-content">
                                <div class="mobile-details-grid">
                                    <div class="mobile-details-item">
                                        <label>Order ID</label>
                                        <span class="text-gray-300">#<%= order.orderId %></span>
                                    </div>
                                    <div class="mobile-details-item">
                                        <label>Date</label>
                                        <span class="text-gray-400">
                                            <%= new Date(order.createdOn).toLocaleDateString() %>
                                        </span>
                                    </div>
                                    <div class="mobile-details-item">
                                        <label>Payment Method</label>
                                        <span class="text-gray-300">
                                            <%= order.paymentMethod.type.toUpperCase() %>
                                        </span>
                                    </div>
                                    <div class="mobile-details-item">
                                        <label>Total Amount</label>
                                        <span class="text-gray-300">â‚¹<%= order.totalPrice.toLocaleString() %></span>
                                    </div>
                                    <div class="mobile-details-item">
                                        <label>Discount</label>
                                        <span class="text-red-400">â‚¹<%= (order.totalPrice - order.finalAmount).toLocaleString() %></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>

    <script>
        const menuBtn = document.getElementById('menu-btn');
        const sidebar = document.getElementById('sidebar');

        menuBtn.addEventListener('click', () => {
            sidebar.classList.toggle('-translate-x-full');
        });

        document.querySelector('select[name="period"]').addEventListener('change', function () {
            const dateRange = document.getElementById('dateRange');
            dateRange.classList.toggle('hidden', this.value !== 'custom');
        });

        document.getElementById('reportForm').addEventListener('submit', function (e) {
            e.preventDefault();

            if (document.querySelector('select[name="period"]').value === 'custom') {
                const startDate = new Date(document.querySelector('input[name="startDate"]').value);
                const endDate = new Date(document.querySelector('input[name="endDate"]').value);

                if (startDate > endDate) {
                    document.getElementById('dateError').classList.remove('hidden');
                    return;
                }
            }

            document.getElementById('dateError').classList.add('hidden');

            const formData = new FormData(this);
            const params = new URLSearchParams();

            for (let [key, value] of formData.entries()) {
                if ((key === 'startDate' || key === 'endDate') && formData.get('period') !== 'custom') {
                    continue;
                }
                params.append(key, value);
            }

            window.location.href = '/admin/sales-report?' + params.toString();
        });

        function downloadReport(format) {
            const period = document.querySelector('select[name="period"]').value;
            const params = new URLSearchParams();
            params.append('format', format);

            if (period === 'custom') {
                const startDate = document.querySelector('input[name="startDate"]').value;
                const endDate = document.querySelector('input[name="endDate"]').value;
                params.append('startDate', startDate);
                params.append('endDate', endDate);
            }
            params.append('period', period);

            window.location.href = '/admin/download-report?' + params.toString();
        }

        function handleResize() {
            if (window.innerWidth >= 768) {
                sidebar.classList.remove('-translate-x-full');
            } else {
                sidebar.classList.add('-translate-x-full');
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            const chartOptions = {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: window.innerWidth < 640 ? 'bottom' : 'right', 
                        labels: {
                            color: '#e5e7eb',
                            font: { size: 12 }
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                let label = context.dataset.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                if (context.parsed.y !== undefined) {
                                    label += 'â‚¹' + context.parsed.y.toLocaleString();
                                }
                                return label;
                            }
                        }
                    }
                },
                scales: {
                    x: {
                        ticks: {
                            color: '#9CA3AF'
                        },
                        grid: {
                            color: 'rgba(255, 255, 255, 0.05)'
                        }
                    },
                    y: {
                        ticks: {
                            color: '#9CA3AF',
                            callback: function(value) {
                                return 'â‚¹' + value.toLocaleString();
                            }
                        },
                        grid: {
                            color: 'rgba(255, 255, 255, 0.05)'
                        }
                    }
                }
            };

            const salesTrendData = <%- JSON.stringify(salesTrendData) %>;
            if (salesTrendData && salesTrendData.length > 0) {
                const salesTrendCtx = document.getElementById('salesTrendChart').getContext('2d');
                new Chart(salesTrendCtx, {
                    type: 'line',
                    data: {
                        labels: salesTrendData.map(item => {
                            const date = new Date(item._id);
                            return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });
                        }),
                        datasets: [{
                            label: 'Daily Sales',
                            data: salesTrendData.map(item => item.totalSales),
                            borderColor: 'rgba(109, 40, 217, 0.8)',
                            backgroundColor: 'rgba(109, 40, 217, 0.2)',
                            tension: 0.3,
                            fill: true,
                            borderWidth: 2
                        }]
                    },
                    options: chartOptions
                });
            } else {
                document.getElementById('salesTrendChart').parentElement.innerHTML = 
                    '<p class="text-gray-400 text-center py-8">No sales data available for the selected period</p>';
            }

            const paymentMethodData = <%- JSON.stringify(paymentMethodData) %>;
            if (paymentMethodData && paymentMethodData.length > 0) {
                const paymentMethodsCtx = document.getElementById('paymentMethodsChart').getContext('2d');
                new Chart(paymentMethodsCtx, {
                    type: 'doughnut',
                    data: {
                        labels: paymentMethodData.map(item => item._id),
                        datasets: [{
                            data: paymentMethodData.map(item => item.total),
                            backgroundColor: [
                                'rgba(109, 40, 217, 0.8)',
                                'rgba(16, 185, 129, 0.8)',
                                'rgba(249, 115, 22, 0.8)',
                                'rgba(236, 72, 153, 0.8)'
                            ],
                            borderColor: '#1f2937',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        ...chartOptions,
                        plugins: {
                            ...chartOptions.plugins,
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        const label = context.label || '';
                                        const value = context.raw || 0;
                                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                        const percentage = Math.round((value / total) * 100);
                                        return `${label}: â‚¹${value.toLocaleString()} (${percentage}%)`;
                                    }
                                }
                            }
                        }
                    }
                });
            } else {
                document.getElementById('paymentMethodsChart').parentElement.innerHTML = 
                    '<p class="text-gray-400 text-center py-8">No payment method data available</p>';
            }

            const orderStatusData = <%- JSON.stringify(orderStatusData) %>;
            if (orderStatusData && orderStatusData.length > 0) {
                const orderStatusCtx = document.getElementById('orderStatusChart').getContext('2d');
                new Chart(orderStatusCtx, {
                    type: 'doughnut',
                    data: {
                        labels: orderStatusData.map(item => item._id),
                        datasets: [{
                            data: orderStatusData.map(item => item.count),
                            backgroundColor: [
                                'rgba(16, 185, 129, 0.8)',
                                'rgba(139, 92, 246, 0.8)',
                                'rgba(249, 115, 22, 0.8)',
                                'rgba(239, 68, 68, 0.8)'
                            ],
                            borderColor: '#1f2937',
                            borderWidth: 2
                        }]
                    },
                    options: {
                        ...chartOptions,
                        plugins: {
                            ...chartOptions.plugins,
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        const label = context.label || '';
                                        const value = context.raw || 0;
                                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                        const percentage = Math.round((value / total) * 100);
                                        return `${label}: ${value} (${percentage}%)`;
                                    }
                                }
                            }
                        }
                    }
                });
            } else {
                document.getElementById('orderStatusChart').parentElement.innerHTML = 
                    '<p class="text-gray-400 text-center py-8">No order status data available</p>';
            }
        });

        window.addEventListener('resize', handleResize);
        handleResize();
    </script>
</body>

</html>
<header class="sticky top-0 z-50 bg-[#1F1F1F] shadow-md">
    <%- include('../../views/partials/user/header')%>
</header>

<body class="bg-[#1F1F1F] text-white min-h-screen">
    <div class="container mx-auto px-4 py-12 max-w-6xl">
        <!-- Header -->
        <div class="text-center mb-12">
            <h1 class="text-2xl md:text-3xl font-bold tracking-wider mb-2">SECURE PAYMENT</h1>
            <div class="w-20 h-1 bg-yellow-400 mx-auto"></div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <div class="lg:col-span-2 bg-[#2A2A2A] rounded-xl p-8 shadow-lg">
                <h2 class="text-lg font-bold tracking-wider mb-6 flex items-center">
                    <span class="w-4 h-4 bg-yellow-400 rounded-full mr-3"></span>
                    CHOOSE PAYMENT METHOD
                </h2>

                <div class="space-y-6 max-w-lg mx-auto p-6 bg-[#1F1F1F] shadow rounded-xl">
                    <form action="/choose-payment" method="post" id="paymentForm">
                        <div class="border border-gray-700 rounded p-4 hover:border-yellow-400 transition-colors">
                            <label class="flex items-center space-x-3 cursor-pointer">
                                <input type="radio" name="payment" value="cod" class="accent-yellow-400" checked
                                    onchange="togglePaymentDetails()" />
                                <span class="font-medium">Cash on Delivery</span>
                                <span class="ml-auto">ðŸ’µ</span>
                            </label>
                            <p class="text-sm text-yellow-400 mt-2 pl-7 hidden" id="codNote">
                                Additional cash collection charge of â‚¹50 applies
                            </p>
                        </div>

                        <div class="border border-gray-700 rounded p-4 hover:border-yellow-400 transition-colors">
                            <label class="flex items-center space-x-3 cursor-pointer">
                                <input type="radio" name="payment" value="razorpay" class="accent-yellow-400"
                                    onchange="togglePaymentDetails()" />
                                <span class="font-medium">Razor Pay</span>
                                <img src="https://razorpay.com/assets/razorpay-logo.svg"
                                    class="w-8 h-8 ml-auto filter brightness-0 invert-[0.8]" />
                            </label>
                        </div>

                        <div class="border border-gray-700 rounded p-4 hover:border-yellow-400 transition-colors">
                            <label class="flex items-center space-x-3 cursor-pointer">
                                <input type="radio" name="payment" value="wallet" class="accent-yellow-400"
                                    onchange="togglePaymentDetails()" <%=!canUseWallet ? 'disabled' : '' %> />
                                <span class="font-medium">Wallet</span>
                                <span class="ml-auto">ðŸ’°</span>
                            </label>
                            <div class="mt-2 pl-7">
                                <p class="text-sm <%= walletBalance >= total ? 'text-green-400' : 'text-yellow-400' %>">
                                    Available balance: â‚¹<%= walletBalance.toFixed(2) %>
                                </p>
                                <% if (walletBalance < total) { %>
                                    <p class="text-sm text-red-400 mt-1">
                                        Insufficient balance (â‚¹<%= (total - walletBalance).toFixed(2) %> more needed)
                                    </p>
                                    <% } %>
                            </div>
                        </div>

                        <div class="pt-6 text-center">
                            <button type="submit" id="payBtn" class="w-full bg-yellow-500 hover:bg-yellow-600 text-black py-3 rounded 
                                font-semibold transition-colors">
                                Continue to Payment
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="bg-[#2A2A2A] rounded-xl p-8 shadow-lg h-fit sticky top-8">


                <h2 class="text-lg font-bold tracking-wider mt-6 mb-4 flex items-center">
                    <span class="w-4 h-4 bg-yellow-400 rounded-full mr-3"></span>
                    ORDER SUMMARY
                </h2>

                <div class="space-y-4 mb-6">
                    <div class="flex justify-between">
                        <span class="text-gray-400">Subtotal (<%= cartItems.length %> items)</span>
                        <span>â‚¹<%= subtotal.toFixed(2) %></span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-400">Delivery</span>
                        <span class="text-white">â‚¹<%= shipingCharge.toFixed(2) %></span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-400">Product Savings</span>
                        <span class="text-green-400">-â‚¹<%= discountAmount.toFixed(2) %></span>
                    </div>
                    <% if (typeof couponDiscount !=='undefined' && couponDiscount> 0) { %>
                        <div class="flex justify-between">
                            <span class="text-gray-400">Coupon Discount</span>
                            <span class="text-green-400">-â‚¹<%= couponDiscount.toFixed(2) %></span>
                        </div>
                        <% } %>
                </div>

                <div class="border-t border-gray-700 pt-4">
                    <div class="flex justify-between text-lg font-bold">
                        <span>TOTAL</span>
                        <span>â‚¹<%= (subtotal - discountAmount - (couponDiscount || 0) + shipingCharge).toFixed(2) %>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function showToast(message, type = 'error') {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.textContent = message;
            document.body.appendChild(toast);

            setTimeout(() => {
                toast.remove();
            }, 3000);
        }

        const style = document.createElement('style');
        style.textContent = `
            .toast {
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 15px 25px;
                border-radius: 5px;
                color: white;
                z-index: 1000;
                animation: slideIn 0.5s, fadeOut 0.5s 2.5s;
            }
            .toast.error {
                background-color: #ff4444;
            }
            .toast.success {
                background-color: #00C851;
            }
            @keyframes slideIn {
                from { transform: translateX(100%); }
                to { transform: translateX(0); }
            }
            @keyframes fadeOut {
                from { opacity: 1; }
                to { opacity: 0; }
            }
        `;
        document.head.appendChild(style);

        function togglePaymentDetails() {
            const codNote = document.getElementById('codNote');
            const selectedMethod = document.querySelector('input[name="payment"]:checked').value;

            codNote.style.display = selectedMethod === 'cod' ? 'block' : 'none';

            const payBtn = document.getElementById('payBtn');
            if (selectedMethod === 'wallet') {
                payBtn.innerText = 'Pay with Wallet';
            } else if (selectedMethod === 'razorpay') {
                payBtn.innerText = 'Continue to Razorpay';
            } else {
                payBtn.innerText = 'Place Order';
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            togglePaymentDetails();

            document.getElementById('paymentForm').addEventListener('submit', function (event) {
                const selectedMethod = document.querySelector('input[name="payment"]:checked').value;

                if (selectedMethod === 'razorpay') {
                    event.preventDefault();

                    const payBtn = document.getElementById('payBtn');
                    const originalText = payBtn.innerText;
                    payBtn.innerText = 'Processing...';
                    payBtn.disabled = true;

                    fetch('/choose-payment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            payment: 'razorpay'
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                const options = data.razorpay;

                                options.handler = function (response) {
                                    console.log(response);
                                    verifyPayment(response, data.orderId);
                                };

                                const rzp = new Razorpay(options);
                                rzp.on('payment.error', function (response) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Payment Failed',
                                        text: 'Something went wrong. Please try again.',
                                        confirmButtonColor: '#d33'
                                    });

                                    payBtn.innerText = originalText;
                                    payBtn.disabled = false;
                                });

                                rzp.open();
                            }
                            else {
                                showToast('Failed to initialize payment. Please try again.');
                                payBtn.innerText = originalText;
                                payBtn.disabled = false;
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            showToast('Something went wrong. Please try again.');
                            payBtn.innerText = originalText;
                            payBtn.disabled = false;
                        });
                }
            });
        });

        function verifyPayment(response, orderId) {
            const payBtn = document.getElementById('payBtn');
            payBtn.innerText = 'Verifying Payment...';

            fetch('/razorpay/verify', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_signature: response.razorpay_signature,
                    orderId: orderId
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = `/paymentSuccess/${data.orderId}`;
                    } else {
                        showToast('Payment verification failed. Please try again.');
                        payBtn.innerText = 'Continue to Razorpay';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('Error verifying payment. Please contact support.');
                    payBtn.innerText = 'Continue to Razorpay';
                });
        }
    </script>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</body>

<%- include('../../views/partials/user/footer') %>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Checkout</title>
        <link rel="icon" href="/images/hand-watch - Copy.png" type="image/png">
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css">
    <script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        .address-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        }

        .address-card:active {
            transform: scale(0.98);
        }

        .selected-address {
            border-color: #f59e0b;
            background-color: rgba(245, 158, 11, 0.05);
        }

        .product-card:hover {
            background-color: rgba(31, 41, 55, 0.5);
        }
        
        /* Enhanced Toast Styles */
        .notyf {
            font-family: 'Inter', sans-serif;
        }
        
        .notyf__toast {
            border-radius: 0.75rem;
            box-shadow: 0 4px 25px rgba(0, 0, 0, 0.25);
            padding: 16px 20px;
            background: #2b2a2a;
            border-left: 4px solid #E8B888;
            display: flex;
            align-items: center;
        }
        
        .notyf__ripple {
            background-color: #E8B888 !important;
        }
        
        .notyf__message {
            color: #fff;
            font-size: 0.95rem;
            padding-left: 10px;
        }
        
        .notyf__icon {
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: 24px;
            min-height: 24px;
            color: #E8B888;
            margin-right: 8px;
        }
        
        .notyf--success {
            background: #2b2a2a;
            border-left-color: #10B981;
        }
        
        .notyf--success .notyf__icon {
            color: #10B981;
        }
        
        .notyf--error {
            background: #2b2a2a;
            border-left-color: #EF4444;
        }
        
        /* Custom dialog styles */
        .custom-dialog {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: #2b2a2a;
            border: 1px solid #3d3d3d;
            border-radius: 0.75rem;
            padding: 1.5rem;
            z-index: 9999;
            width: 90%;
            max-width: 400px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            animation: fadeIn 0.3s ease-out;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translate(-50%, -45%); }
            to { opacity: 1; transform: translate(-50%, -50%); }
        }
        
        .custom-dialog-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 9998;
            backdrop-filter: blur(4px);
            animation: fadeInBackdrop 0.3s ease-out;
        }
        
        @keyframes fadeInBackdrop {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        .dialog-btn {
            transition: all 0.2s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        .dialog-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }
        
        .dialog-btn:active {
            transform: scale(0.98);
        }
        
        .spinner {
            border: 3px solid rgba(232, 184, 136, 0.3);
            border-radius: 50%;
            border-top: 3px solid #E8B888;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* Enhanced button styles */
        .btn-primary {
            background: linear-gradient(135deg, #E8B888 0%, #f59e0b 100%);
            color: #1F1F1F;
            font-weight: 600;
            border: none;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(232, 184, 136, 0.2);
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(232, 184, 136, 0.3);
        }
        
        .btn-primary:active {
            transform: scale(0.98);
        }
        
        .btn-secondary {
            background: rgba(255, 255, 255, 0.05);
            color: #E8B888;
            border: 1px solid rgba(232, 184, 136, 0.3);
            transition: all 0.3s ease;
        }
        
        .btn-secondary:hover {
            background: rgba(232, 184, 136, 0.1);
            border-color: rgba(232, 184, 136, 0.5);
            transform: translateY(-2px);
        }
        
        .btn-secondary:active {
            transform: scale(0.98);
        }
        
        /* Address card enhancements */
        .address-card {
            position: relative;
            overflow: hidden;
            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        }
        
        .selected-address::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: #E8B888;
        }
        
        /* Button group styles */
        .btn-group {
            display: flex;
            gap: 8px;
            margin-top: 12px;
        }
        
        .btn-sm {
            padding: 6px 12px;
            font-size: 0.75rem;
            border-radius: 6px;
        }
        
        /* Delivery info card */
        .delivery-card {
            background: rgba(232, 184, 136, 0.05);
            border: 1px solid rgba(232, 184, 136, 0.1);
        }
    </style>
</head>

<body class="bg-[#1F1F1F] text-gray-100 min-h-screen">
    <header class="sticky top-0 z-50 bg-[#1F1F1F] shadow-md">
        <%- include('../../views/partials/user/header') %>
    </header>

    <div class="container mx-auto px-4 py-6 sm:py-8 max-w-7xl">
        <div class="w-16 h-[2px] bg-[#E8B888] mx-auto mb-3 sm:mb-4"></div>
        <div class="relative flex justify-center items-center mb-6 sm:mb-8">
            <h2 class="text-white text-2xl sm:text-3xl font-sans tracking-tight">CHECKOUT</h2>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 sm:gap-8">
            <div class="lg:col-span-2 space-y-6 sm:space-y-8">
                <div class="bg-[#2b2a2a] rounded-xl p-4 sm:p-6 shadow-lg border border-gray-700">
                    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 sm:mb-6 gap-3 sm:gap-0">
                        <h3 class="text-lg sm:text-xl font-semibold text-yellow-400 flex items-center gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                            </svg>
                            SELECT ADDRESS
                        </h3>
                        <a href="/addAddressCheckout"
                           class="btn-primary px-4 sm:px-5 py-2 sm:py-2.5 rounded-lg text-sm font-medium flex items-center gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
                            </svg>
                            Add New Address
                        </a>
                    </div>

                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4">
                        <% if (addresses && addresses.length > 0) { %>
                            <% addresses.forEach((address, index) => { %>
                                <div class="address-card <%= index === 0 ? 'selected-address border border-yellow-400' : 'border border-gray-700' %> bg-gray-750 p-4 sm:p-5 rounded-lg transition-all duration-300 cursor-pointer">
                                    <% if (index === 0) { %>
                                        <div class="flex items-start mb-2">
                                            <span class="bg-yellow-400 text-black text-xs px-2 py-0.5 rounded-full mr-2 flex items-center gap-1">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 20 20" fill="currentColor">
                                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                                                </svg>
                                                Default
                                            </span>
                                            <p class="font-medium text-white text-sm sm:text-base">
                                                <%= address.name %>
                                            </p>
                                        </div>
                                    <% } else { %>
                                        <p class="font-medium text-white mb-2 text-sm sm:text-base">
                                            <%= address.name %>
                                        </p>
                                    <% } %>

                                    <p class="text-xs sm:text-sm text-gray-300 mb-1">
                                        <%= address.landMark %>
                                    </p>
                                    <p class="text-xs sm:text-sm text-gray-300">
                                        <%= address.city %>, <%= address.state %>
                                    </p>
                                    <p class="text-xs sm:text-sm text-gray-300 mb-2 sm:mb-3">
                                        <%= address.country %> - <%= address.pincode %>
                                    </p>
                                    <p class="text-xs sm:text-sm text-gray-300 flex items-center gap-1">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 20 20" fill="currentColor">
                                            <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z" />
                                        </svg>
                                        <%= address.phone %>
                                    </p>

                                    <div class="btn-group">
                                        <% if (index !== 0) { %>
                                            <form method="POST" action="/setDefaultAddress/<%= address._id %>" class="set-default-form">
                                                <button type="submit"
                                                        class="btn-secondary btn-sm flex items-center gap-1">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                                    </svg>
                                                    Set Default
                                                </button>
                                            </form>
                                        <% } %>
                                        <a href="/editAddress-checkout?id=<%= address._id %>"
                                           class="btn-secondary btn-sm flex items-center gap-1">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                            </svg>
                                            Edit
                                        </a>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <div class="col-span-1 sm:col-span-2 lg:col-span-3 text-center py-4 sm:py-6">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-500 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                                </svg>
                                <p class="text-gray-400 text-sm sm:text-base mb-4">No addresses found. Please add an address to continue.</p>
                                <a href="/addAddressCheckout"
                                   class="btn-primary inline-block px-4 sm:px-5 py-2 sm:py-2.5 rounded-lg text-sm font-medium flex items-center justify-center gap-2 mx-auto w-fit">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
                                    </svg>
                                    Add Address
                                </a>
                            </div>
                        <% } %>
                    </div>
                </div>

                <div class="bg-[#2b2a2a] rounded-xl p-4 sm:p-6 shadow-lg border border-gray-700">
                    <h4 class="text-base sm:text-lg font-semibold text-yellow-400 mb-3 sm:mb-4 flex items-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z" />
                        </svg>
                        DELIVERY INFORMATION
                    </h4>
                    <div class="delivery-card flex items-center gap-3 sm:gap-4 p-3 sm:p-4 rounded-lg">
                        <div class="bg-gray-750 p-2 sm:p-3 rounded-lg flex-shrink-0">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-7 sm:h-8 w-7 sm:w-8 text-yellow-400" fill="none"
                                 viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                            </svg>
                        </div>
                        <div>
                            <p class="text-xs sm:text-sm text-gray-400">Estimated Delivery</p>
                            <p class="font-medium text-sm sm:text-base text-yellow-400" id="deliveryDate"></p>
                        </div>
                    </div>
                </div>

                <div class="bg-[#2b2a2a] rounded-xl p-4 sm:p-6 shadow-lg border border-gray-700">
                    <h4 class="text-base sm:text-lg font-semibold text-yellow-400 mb-4 sm:mb-6 flex items-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z" clip-rule="evenodd" />
                        </svg>
                        YOUR ORDER
                    </h4>
                    <div class="space-y-3 sm:space-y-4">
                        <% cartItems.forEach(item => { %>
                            <div class="product-card flex items-center gap-3 sm:gap-4 p-3 sm:p-4 rounded-lg transition-all duration-200 border border-gray-700">
                                <img src="<%= item.productId.productImage[0] %>" alt="<%= item.productId.name %>"
                                     class="w-16 sm:w-20 h-16 sm:h-20 object-cover rounded-lg border border-gray-600" />
                                <div class="flex-1">
                                    <h5 class="font-medium text-sm sm:text-base">
                                        <%= item.productId.productName %>
                                    </h5>
                                    <p class="text-xs sm:text-sm text-gray-400">
                                        <% if (item.productId.color) { %>
                                            <span class="inline-flex items-center gap-1">
                                                <span class="w-3 h-3 rounded-full inline-block" style="background-color: <%= item.productId.color.toLowerCase() %>;"></span>
                                                <%= item.productId.color %>
                                            </span> | 
                                        <% } %>
                                        Qty: <%= item.quantity %>
                                    </p>
                                </div>
                                <div class="text-right">
                                    <p class="text-white font-medium text-sm sm:text-base">
                                        ₹<%= (item.productId.salePrice * item.quantity).toFixed(2) %>
                                    </p>
                                    <% if (item.productId.regularPrice) { %>
                                        <p class="text-xs text-gray-500 line-through">
                                            ₹<%= (item.productId.regularPrice * item.quantity).toFixed(2) %>
                                        </p>
                                    <% } %>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>

            <div class="lg:col-span-1">
                <div class="bg-[#2b2a2a] rounded-xl p-4 sm:p-6 shadow-lg border border-gray-700 h-fit sticky top-6">
                    <h4 class="text-lg sm:text-xl font-semibold text-center text-yellow-400 mb-4 sm:mb-6 flex items-center justify-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z" clip-rule="evenodd" />
                        </svg>
                        ORDER SUMMARY
                    </h4>
                    <div class="space-y-3 sm:space-y-4 text-sm sm:text-base mb-4 sm:mb-6">
                        <div class="flex justify-between">
                            <span class="text-gray-400">Subtotal (<%= cartItems.reduce((total, item) => total + item.quantity, 0) %> items)</span>
                            <span>₹<%= subtotal.toFixed(2) %></span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-400">Shipping</span>
                            <span class="text-white">₹<%= shippingCharge.toFixed(2) %></span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-400">Product Savings</span>
                            <span class="text-green-400">-₹<%= discountAmount.toFixed(2) %></span>
                        </div>
                        <% if (typeof couponDiscount !== 'undefined' && couponDiscount > 0) { %>
                            <div class="flex justify-between">
                                <span class="text-gray-400">Coupon Discount</span>
                                <span class="text-green-400">-₹<%= couponDiscount.toFixed(2) %></span>
                            </div>
                        <% } %>
                        <hr class="border-gray-700 my-3 sm:my-4" />
                        <div class="flex justify-between text-base sm:text-lg font-bold mb-4 sm:mb-6">
                            <span>Total</span>
                            <span class="text-yellow-400">₹<%= (subtotal - discountAmount - (couponDiscount || 0) + shippingCharge).toFixed(2) %></span>
                        </div>
                        <% if (addresses && addresses.length > 0) { %>
                            <form action="/proceed-payment" method="get">
                                <button type="submit"
                                        class="btn-primary w-full font-semibold py-3 sm:py-4 px-4 sm:px-6 rounded-lg transition-all duration-200 flex items-center justify-center gap-2 text-sm sm:text-base">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                        <path fill-rule="evenodd"
                                              d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z"
                                              clip-rule="evenodd" />
                                    </svg>
                                    PROCEED TO PAYMENT
                                </button>
                            </form>
                        <% } else { %>
                            <div class="w-full bg-yellow-400 text-black font-semibold py-3 sm:py-4 px-4 sm:px-6 rounded-lg flex items-center justify-center gap-2 text-sm sm:text-base opacity-50 cursor-not-allowed">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd"
                                          d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z"
                                          clip-rule="evenodd" />
                                </svg>
                                PROCEED TO PAYMENT
                            </div>
                            <p class="text-xs sm:text-sm text-red-400 mt-2 text-center flex items-center justify-center gap-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                                </svg>
                                Please add an address to continue
                            </p>
                        <% } %>
                    </div>
                    <div class="mt-3 sm:mt-4 text-xs sm:text-sm text-gray-500 text-center">
                        <p>By placing your order, you agree to our <a href="#" class="text-yellow-400 hover:underline">Terms of Service</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        
        const notyf = new Notyf({
            duration: 3000,
            position: {
                x: 'right',
                y: 'top'
            },
            ripple: true,
            dismissible: true
        });
        
        const showSuccessToast = (message) => {
            const toastElement = document.createElement('div');
            toastElement.className = 'custom-toast success-toast';
            toastElement.innerHTML = `
                <div class="toast-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 20 20" fill="#10B981">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="toast-message">${message}</div>
            `;
            
            document.body.appendChild(toastElement);
            
            setTimeout(() => {
                toastElement.classList.add('show');
            }, 10);
            
            setTimeout(() => {
                toastElement.classList.remove('show');
                setTimeout(() => {
                    toastElement.remove();
                }, 300);
            }, 3000);
        };
        
        const toastStyles = document.createElement('style');
        toastStyles.textContent = `
            .custom-toast {
                position: fixed;
                top: 20px;
                right: 20px;
                display: flex;
                align-items: center;
                padding: 16px 20px;
                background: #2b2a2a;
                border-radius: 0.75rem;
                box-shadow: 0 4px 25px rgba(0, 0, 0, 0.25);
                z-index: 9999;
                transform: translateX(120%);
                transition: transform 0.3s ease;
                max-width: 350px;
            }
            
            .custom-toast.show {
                transform: translateX(0);
            }
            
            .success-toast {
                border-left: 4px solid #10B981;
            }
            
            .toast-icon {
                display: flex;
                align-items: center;
                justify-content: center;
                margin-right: 12px;
            }
            
            .toast-message {
                color: #fff;
                font-size: 0.95rem;
                font-family: 'Inter', sans-serif;
            }
        `;
        document.head.appendChild(toastStyles);

        document.addEventListener('DOMContentLoaded', function () {
            const today = new Date();
            const deliveryDate = new Date(today);
            deliveryDate.setDate(today.getDate() + 7);
            
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            document.getElementById('deliveryDate').textContent = deliveryDate.toLocaleDateString('en-US', options);

            document.querySelectorAll('.set-default-form').forEach(form => {
                form.addEventListener('submit', async (e) => {
                    e.preventDefault();
                    
                    const dialogId = 'dialog-' + Date.now();
                    const backdropId = 'backdrop-' + Date.now();
                    
                    const backdrop = document.createElement('div');
                    backdrop.id = backdropId;
                    backdrop.className = 'custom-dialog-backdrop';
                    document.body.appendChild(backdrop);
                    
                    const dialog = document.createElement('div');
                    dialog.id = dialogId;
                    dialog.className = 'custom-dialog';
                    dialog.innerHTML = `
                        <div class="text-center mb-4">
                            <div class="w-12 h-12 rounded-full bg-yellow-400 bg-opacity-10 mx-auto flex items-center justify-center mb-3">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-yellow-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                            </div>
                            <h3 class="text-lg font-semibold text-white mb-1">Set as Default Address?</h3>
                            <p class="text-gray-300 text-sm">This will be your primary shipping address</p>
                        </div>
                        <div class="flex gap-3 justify-center">
                            <button id="cancel-${dialogId}" class="dialog-btn bg-gray-700 hover:bg-gray-600 text-white px-5 py-2 rounded-lg text-sm font-medium">
                                Cancel
                            </button>
                            <button id="confirm-${dialogId}" class="dialog-btn bg-yellow-400 hover:bg-yellow-500 text-black px-5 py-2 rounded-lg text-sm font-medium">
                                Set as Default
                            </button>
                        </div>
                    `;
                    document.body.appendChild(dialog);
                    
                    document.getElementById(`cancel-${dialogId}`).addEventListener('click', function() {
                        document.getElementById(dialogId).remove();
                        document.getElementById(backdropId).remove();
                    });
                    
                    document.getElementById(`confirm-${dialogId}`).addEventListener('click', async function() {
                        dialog.innerHTML = `
                            <div class="text-center">
                                <div class="flex items-center justify-center gap-3 mb-2">
                                                                        <div class="spinner"></div>
                                    <p class="text-white text-sm font-medium">Processing...</p>
                                </div>
                                <p class="text-gray-300 text-sm">Please wait while we update your default address</p>
                            </div>
                        `;

                        try {
                            const response = await fetch(form.action, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Accept': 'application/json'
                                }
                            });

                            const result = await response.json();

                            if (response.ok) {
                                showSuccessToast('Default address updated successfully!');
                                
                                document.getElementById(dialogId).remove();
                                document.getElementById(backdropId).remove();
                                
                                setTimeout(() => {
                                    window.location.reload();
                                }, 1000); 
                            } else {
                                throw new Error(result.message || 'Failed to update default address');
                            }
                        } catch (error) {
                            notyf.error(error.message || 'Failed to update default address');
                            
                            dialog.innerHTML = `
                                <div class="text-center mb-4">
                                    <div class="w-12 h-12 rounded-full bg-red-400 bg-opacity-10 mx-auto flex items-center justify-center mb-3">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                                        </svg>
                                    </div>
                                    <h3 class="text-lg font-semibold text-white mb-1">Error</h3>
                                    <p class="text-gray-300 text-sm">${error.message || 'Failed to update default address'}</p>
                                </div>
                                <div class="flex justify-center">
                                    <button id="close-${dialogId}" class="dialog-btn bg-gray-700 hover:bg-gray-600 text-white px-5 py-2 rounded-lg text-sm font-medium">
                                        Close
                                    </button>
                                </div>
                            `;
                            
                            document.getElementById(`close-${dialogId}`).addEventListener('click', function() {
                                document.getElementById(dialogId).remove();
                                document.getElementById(backdropId).remove();
                            });
                        }
                    });
                });
            });

            document.querySelectorAll('.address-card').forEach(card => {
                card.addEventListener('click', function(e) {
                    if (e.target.closest('.btn-group') || e.target.tagName === 'A' || e.target.tagName === 'BUTTON') {
                        return;
                    }

                    document.querySelectorAll('.address-card').forEach(c => {
                        c.classList.remove('selected-address', 'border-yellow-400');
                        c.classList.add('border-gray-700');
                    });

                    this.classList.add('selected-address', 'border-yellow-400');
                    this.classList.remove('border-gray-700');
                });
            });

            const proceedButton = document.querySelector('form[action="/proceed-payment"] button');
            if (proceedButton) {
                proceedButton.addEventListener('click', async (e) => {
                    e.preventDefault();
                    proceedButton.disabled = true;
                    proceedButton.innerHTML = `
                        <div class="spinner"></div>
                        <span>Processing...</span>
                    `;

                    try {
                        const selectedAddressCard = document.querySelector('.address-card.selected-address');
                        if (!selectedAddressCard) {
                            throw new Error('Please select a delivery address');
                        }

                       
                        await new Promise(resolve => setTimeout(resolve, 1000));

                        window.location.href = '/proceed-payment';
                    } catch (error) {
                        notyf.error(error.message || 'Failed to proceed to payment');
                        proceedButton.disabled = false;
                        proceedButton.innerHTML = `
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd" />
                            </svg>
                            PROCEED TO PAYMENT
                        `;
                    }
                });
            }
        });
    </script>
</body>
</html>
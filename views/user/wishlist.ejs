<%- include('../../views/partials/user/header') %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Wishlist | Luxury Watches</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Poppins:wght@300;400;500;600&display=swap');
        
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #1F1F1F;
        }
        
        .logo-font {
            font-family: 'Playfair Display', serif;
            letter-spacing: 0.05em;
        }
        
        .watch-card {
            transition: all 0.3s ease;
            background-color: #2B2B2B;
            border: 1px solid #333;
        }
        
        .watch-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
            border-color: #FFB568;
        }
        
        .watch-image {
            height: 280px;
            object-fit: cover;
        }
        
        .price-tag {
            color: #FFB568;
            font-weight: 700;
        }
        
        .add-to-cart-btn {
            background-color: #1F1F1F;
            transition: all 0.3s ease;
        }
        
        .add-to-cart-btn:hover {
            background-color: #FFB568;
            color: #1F1F1F;
        }
        
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 12px 20px;
            border-radius: 4px;
            display: flex;
            align-items: center;
            gap: 12px;
            color: white;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            z-index: 9999;
            transform: translateX(120%);
            transition: transform 0.3s ease;
            max-width: 350px;
        }
        
        .toast.show {
            transform: translateX(0);
        }
        
        .toast-success {
            background-color: #10b981;
        }
        
        .toast-error {
            background-color: #ef4444;
        }
        
        .toast-warning {
            background-color: #f59e0b;
        }
        
        .toast-icon {
            font-size: 20px;
        }
    </style>
</head>
<body class="bg-[#1F1F1F] text-white min-h-screen">
    <div class="container mx-auto px-4 py-12 max-w-7xl">
        <div class="text-center mb-12">
            <div class="w-16 h-[2px] bg-[#E8B888] mx-auto mb-4"></div>
            <h1 class="text-3xl font-medium">My Wishlist</h1>
            <p class="text-gray-400 mt-2">Your saved items are waiting for you</p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            <% if (wishlistItems && wishlistItems.length > 0) { %>
                <% wishlistItems.forEach(item => { %>
                    <div class="group bg-[#252525] rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300">
                        <div class="relative">
                            <img src="<%= item.productId.productImage[0] %>" 
                                 alt="<%= item.productId.productName %>" 
                                 class="w-full h-64 object-cover transition-transform duration-300 group-hover:scale-105">
                            
                            <div class="absolute top-0 right-0 p-2 space-y-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                <button class="w-10 h-10 bg-[#1F1F1F]/80 rounded-full flex items-center justify-center hover:bg-[#E8B888] transition-colors"
                                        onclick="removeFromWishlist('<%= item._id %>')">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                    </svg>
                                </button>
                                <button class="w-10 h-10 bg-[#1F1F1F]/80 rounded-full flex items-center justify-center hover:bg-[#E8B888] transition-colors"
                                        onclick="addToCart('<%= item.productId._id %>', '<%= item._id %>')">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                                    </svg>
                                </button>
                            </div>
                        </div>

                        <div class="p-4">
                            <h3 class="font-medium text-lg mb-1 group-hover:text-[#E8B888] transition-colors">
                                <%= item.productId.productName %>
                            </h3>
                            <p class="text-gray-400 text-sm mb-3 line-clamp-2">
                                <%= item.productId.description %>
                            </p>
                            <div class="flex items-center justify-between">
                                <span class="text-[#E8B888] font-medium">â‚¹<%= item.productId.regularPrice.toFixed(2) %></span>
                                <a href="/productDetails?id=<%= item.productId._id %>" 
                                   class="text-sm text-gray-400 hover:text-[#E8B888] transition-colors">
                                    View Details
                                </a>
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="col-span-full text-center py-16">
                    <div class="w-24 h-24 mx-auto mb-6 text-gray-400">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" 
                                  d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                        </svg>
                    </div>
                    <h3 class="text-xl font-medium text-gray-200 mb-2">Your wishlist is empty</h3>
                    <p class="text-gray-400 mb-6">Start adding items to your wishlist</p>
                    <a href="/products" 
                       class="inline-block bg-[#E8B888] text-black px-6 py-2 rounded-full hover:bg-[#D9A76A] transition">
                        Browse Products
                    </a>
                </div>
            <% } %>
        </div>
    </div>

    <div id="loadingOverlay" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-[#252525] p-6 rounded-lg shadow-xl flex flex-col items-center">
            <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-[#E8B888] mb-4"></div>
            <p class="text-white">Processing...</p>
        </div>
    </div>
    
    <div id="toastContainer"></div>

    <script>
        function showLoading() {
            document.getElementById('loadingOverlay').classList.remove('hidden');
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').classList.add('hidden');
        }
        
        function showToast(message, type = 'success', duration = 3000) {
            const toast = document.createElement('div');
            toast.className = `toast toast-${type}`;
            
            let icon = '';
            if (type === 'success') {
                icon = '<i class="fas fa-check-circle toast-icon"></i>';
            } else if (type === 'error') {
                icon = '<i class="fas fa-times-circle toast-icon"></i>';
            } else if (type === 'warning') {
                icon = '<i class="fas fa-exclamation-circle toast-icon"></i>';
            }
            
            toast.innerHTML = `
                ${icon}
                <span>${message}</span>
                <button class="ml-auto text-white/80 hover:text-white">
                    <i class="fas fa-times"></i>
                </button>
            `;
            
            const container = document.getElementById('toastContainer');
            container.appendChild(toast);
            
            setTimeout(() => {
                toast.classList.add('show');
            }, 10);
            
            toast.querySelector('button').addEventListener('click', () => {
                toast.classList.remove('show');
                setTimeout(() => {
                    container.removeChild(toast);
                }, 300);
            });
            
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => {
                    if (container.contains(toast)) {
                        container.removeChild(toast);
                    }
                }, 300);
            }, duration);
        }

        function removeFromWishlist(itemId) {
            showLoading();
            fetch(`/removeFromWishlist?id=${itemId}`, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                hideLoading();
                if (data.success) {
                    showToast('Item removed from wishlist', 'success');
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } else {
                    throw new Error(data.message);
                }
            })
            .catch(err => {
                hideLoading();
                showToast(err.message || 'Unable to remove item', 'error');
            });
        }

        function addToCart(productId, wishlistItemId) {
            showLoading();
            fetch('/moveToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({ productId, wishlistItemId })
            })
            .then(response => response.json())
            .then(data => {
                hideLoading();
                if (data.success) {
                    const cartCountElement = document.querySelector('.cart-count');
                    if (cartCountElement && data.cartCount !== undefined) {
                        cartCountElement.textContent = data.cartCount;
                    }
                    
                    const wishlistCountElement = document.querySelector('.wishlist-count');
                    if (wishlistCountElement && data.wishlistCount !== undefined) {
                        wishlistCountElement.textContent = data.wishlistCount;
                    }
                    
                    showToast('Product added to cart', 'success');
                    setTimeout(() => {
                        location.reload(); 
                    }, 1000);
                } else {
                    throw new Error(data.message);
                }
            })
            .catch(err => {
                hideLoading();
                showToast(err.message || 'Unable to add to cart', 'error');
            });
        }
    </script>
</body>

<%- include('../../views/partials/user/footer') %>
</html>
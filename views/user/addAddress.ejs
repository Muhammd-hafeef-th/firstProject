<head>
     <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LB | Lybros</title>
    <link rel="icon" href="/images/hand-watch - Copy.png" type="image/png"> 
</head>
<header class="sticky top-0 z-50 bg-[#1F1F1F] shadow-md">
    <%- include('../../views/partials/user/header')%>
</header>
<script src="https://cdn.tailwindcss.com"></script>

<body class="bg-[#1F1F1F] text-white">
    
    <button id="menu-toggle" class="md:hidden fixed top-4 left-4 z-50 p-2 rounded-full bg-[#333] hover:bg-[#444] transition-colors">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
    </button>

    <div class="flex flex-col md:flex-row min-h-screen">
        
        <div id="sidebar" class="fixed inset-y-0 left-0 w-64 bg-[#1F1F1F] p-6 transform -translate-x-full md:translate-x-0 md:sticky md:top-16 md:h-[calc(100vh-4rem)] transition-transform duration-300 ease-in-out md:block z-40">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-xl font-bold text-[#88903F] border-b border-[#333] pb-4">SETTINGS</h2>
                <button id="close-menu" class="md:hidden p-2 rounded-full bg-[#333] hover:bg-[#444] transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <ul class="space-y-3">
                <li>
                    <a href="/profile" class="flex items-center p-3 rounded-lg hover:bg-[#333] transition-colors text-base">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                        </svg>
                        Personal Info
                    </a>
                </li>
                <li>
                    <a href="/orders" class="flex items-center p-3 rounded-lg hover:bg-[#333] transition-colors text-base">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                        Orders
                    </a>
                </li>
                <li>
                    <a href="/address" class="flex items-center p-3 rounded-lg bg-[#333] text-[#88903F] text-base">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                        </svg>
                        Address
                    </a>
                </li>
                <li>
                    <a href="/wallet" class="flex items-center p-3 rounded-lg hover:bg-[#333] transition-colors text-base">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
                        </svg>
                        Wallet
                    </a>
                </li>
                <li>
                    <a href="/referrals" class="flex items-center p-3 rounded-lg hover:bg-[#333] transition-colors text-base">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                        </svg>
                        Referrals
                    </a>
                </li>
            </ul>

            <div class="mt-10 border-t border-[#333] pt-6">
                <% if (!userDatas || Object.keys(userDatas).length===0) { %>
                    <a href="/login" class="block w-full bg-[#88903F] hover:bg-[#a0a84f] text-white py-3 px-4 rounded-lg text-center transition-colors text-base">
                        Login
                    </a>
                    <% } else { %>
                        <a href="/logout" class="block w-full bg-[#333] hover:bg-[#444] text-white py-3 px-4 rounded-lg text-center transition-colors text-base">
                            Logout
                        </a>
                        <% } %>
            </div>
        </div>

        
        <div class="flex-1 flex justify-center p-4 md:p-8">
            <div class="w-full max-w-2xl bg-[#1F1F1F] p-6 sm:p-8 rounded-lg border border-gray-700 shadow-md">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-xl sm:text-2xl font-bold text-[#88903F]">Add New Address</h2>
                </div>
                <form action="/add-address" method="POST" onsubmit="return handleFormSubmit(event)" class="grid grid-cols-1 gap-4 sm:gap-6">
                    <div>
                        <label class="block text-gray-300 mb-1 text-sm sm:text-base">Name</label>
                        <input type="text" name="name" id="name" class="w-full p-3 border border-gray-600 rounded-lg bg-transparent text-white text-base focus:ring-2 focus:ring-[#88903F] focus:border-transparent transition-colors" placeholder="Enter your name">
                        <div id="name-error" class="text-red-500 text-sm mt-1 hidden"></div>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-1 text-sm sm:text-base">State</label>
                        <input type="text" name="state" id="state" class="w-full p-3 border border-gray-600 rounded-lg bg-transparent text-white text-base focus:ring-2 focus:ring-[#88903F] focus:border-transparent transition-colors" placeholder="Enter your state">
                        <div id="state-error" class="text-red-500 text-sm mt-1 hidden"></div>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-1 text-sm sm:text-base">Country</label>
                        <input type="text" name="country" id="country" class="w-full p-3 border border-gray-600 rounded-lg bg-transparent text-white text-base focus:ring-2 focus:ring-[#88903F] focus:border-transparent transition-colors" placeholder="Enter your country">
                        <div id="country-error" class="text-red-500 text-sm mt-1 hidden"></div>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-1 text-sm sm:text-base">Town / City</label>
                        <input type="text" name="city" id="city" class="w-full p-3 border border-gray-600 rounded-lg bg-transparent text-white text-base focus:ring-2 focus:ring-[#88903F] focus:border-transparent transition-colors" placeholder="Enter your town/city">
                        <div id="city-error" class="text-red-500 text-sm mt-1 hidden"></div>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-1 text-sm sm:text-base">Street Address</label>
                        <input type="text" name="landMark" id="landMark" placeholder="House number and street name" class="w-full p-3 border border-gray-600 rounded-lg bg-transparent text-white text-base focus:ring-2 focus:ring-[#88903F] focus:border-transparent transition-colors">
                        <div id="landMark-error" class="text-red-500 text-sm mt-1 hidden"></div>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-1 text-sm sm:text-base">Postcode / ZIP *</label>
                        <input type="text" name="pincode" id="pincode" class="w-full p-3 border border-gray-600 rounded-lg bg-transparent text-white text-base focus:ring-2 focus:ring-[#88903F] focus:border-transparent transition-colors" placeholder="Enter your postcode/ZIP">
                        <div id="pincode-error" class="text-red-500 text-sm mt-1 hidden"></div>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-1 text-sm sm:text-base">Phone</label>
                        <input type="text" name="phone" id="phone" class="w-full p-3 border border-gray-600 rounded-lg bg-transparent text-white text-base focus:ring-2 focus:ring-[#88903F] focus:border-transparent transition-colors" placeholder="Enter your phone number">
                        <div id="phone-error" class="text-red-500 text-sm mt-1 hidden"></div>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-1 text-sm sm:text-base">Alternative Phone</label>
                        <input type="text" name="altPhone" id="altPhone" class="w-full p-3 border border-gray-600 rounded-lg bg-transparent text-white text-base focus:ring-2 focus:ring-[#88903F] focus:border-transparent transition-colors" placeholder="Enter your alternative phone number">
                        <div id="altPhone-error" class="text-red-500 text-sm mt-1 hidden"></div>
                    </div>
                    <div class="flex justify-center mt-6">
                        <button type="submit" id="submitButton" class="bg-[#88903F] text-white px-8 py-3 rounded-lg font-semibold hover:bg-[#a0a84f] transition-transform transform hover:scale-105 text-base">
                            Add Address
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Menu Toggle for Mobile
        const menuToggle = document.getElementById('menu-toggle');
        const closeMenu = document.getElementById('close-menu');
        const sidebar = document.getElementById('sidebar');

        menuToggle.addEventListener('click', () => {
            sidebar.classList.toggle('-translate-x-full');
        });

        closeMenu.addEventListener('click', () => {
            sidebar.classList.add('-translate-x-full');
        });

        // Close sidebar when clicking outside (mobile)
        document.addEventListener('click', (e) => {
            if (!sidebar.contains(e.target) && !menuToggle.contains(e.target) && !sidebar.classList.contains('-translate-x-full')) {
                sidebar.classList.add('-translate-x-full');
            }
        });

        // Form Validation (Unchanged)
        let isSubmitting = false;
        const submitButton = document.getElementById("submitButton");

        function handleFormSubmit(event) {
            event.preventDefault();

            if (isSubmitting) return;
            isSubmitting = true;
            submitButton.disabled = true;

            if (!validateForm()) {
                isSubmitting = false;
                submitButton.disabled = false;
                return false;
            }

            event.target.submit();
        }

        function validateForm() {
            clearErrorMessages();
            let isValid = true;

            const name = document.getElementById('name').value.trim();
            if (!/^[A-Z][a-zA-Z\s]*$/.test(name)) {
                displayErrorMessage("name-error", "Name should start with a capital letter and contain only alphabets");
                isValid = false;
            }

            const state = document.getElementById('state').value.trim();
            if (state.length < 2) {
                displayErrorMessage("state-error", "Please enter a valid state");
                isValid = false;
            }

            const country = document.getElementById('country').value.trim();
            if (country.length < 2) {
                displayErrorMessage("country-error", "Please enter a valid country");
                isValid = false;
            }

            const city = document.getElementById('city').value.trim();
            if (city.length < 2) {
                displayErrorMessage("city-error", "Please enter a valid city");
                isValid = false;
            }

            const landMark = document.getElementById('landMark').value.trim();
            if (landMark.length < 5) {
                displayErrorMessage("landMark-error", "Please enter a complete street address");
                isValid = false;
            }

            const pincode = document.getElementById('pincode').value.trim();
            if (pincode === "") {
                displayErrorMessage("pincode-error", "Pincode is required");
                isValid = false;
            } else if (!/^[1-9][0-9]{5}$/.test(pincode)) {
                displayErrorMessage("pincode-error", "Please enter a valid 6-digit Indian pincode");
                isValid = false;
            }

            const phone = document.getElementById('phone').value.trim();
            if (phone === "") {
                displayErrorMessage("phone-error", "Phone number is required");
                isValid = false;
            } else if (!/^\d{10}$/.test(phone)) {
                displayErrorMessage("phone-error", "Please enter a valid 10-digit phone number");
                isValid = false;
            } else if (!/^[6-9]/.test(phone)) {
                displayErrorMessage("phone-error", "Phone number must start with 6, 7, 8, or 9");
                isValid = false;
            } else if (/^(\d)\1{9}$/.test(phone)) {
                displayErrorMessage("phone-error", "All digits cannot be the same");
                isValid = false;
            }

            const altPhone = document.getElementById('altPhone').value.trim();
            if (altPhone && !/^\d{10}$/.test(altPhone)) {
                displayErrorMessage("altPhone-error", "Please enter a valid 10-digit phone number or leave blank");
                isValid = false;
            } else if (altPhone && !/^[6-9]/.test(altPhone)) {
                displayErrorMessage("altPhone-error", "Phone number must start with 6, 7, 8, or 9");
                isValid = false;
            } else if (altPhone && /^(\d)\1{9}$/.test(altPhone)) {
                displayErrorMessage("altPhone-error", "All digits cannot be the same");
                isValid = false;
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.classList.remove("hidden");
            errorElement.classList.add("block");
        }

        function clearErrorMessages() {
            const errorElements = document.querySelectorAll('[id$="-error"]');
            errorElements.forEach((element) => {
                element.innerText = "";
                element.classList.add("hidden");
                element.classList.remove("block");
            });
        }
    </script>
</body>